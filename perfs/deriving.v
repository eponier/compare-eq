From mathcomp Require Import ssreflect ssrnat eqtype.
From deriving Require Import deriving.

Require Import types.


Module Small.

Import Small.

(* t_rect is the recursor automatically generated by Coq *)
Time Definition t_indDef := [indDef for t_rect].
Time Canonical t_indType := IndType t t_indDef.

Time Definition t_eqMixin := [derive eqMixin for t].
Time Canonical t_eqType := EqType t t_eqMixin.

End Small.


Module Medium.

Import Medium.

(* t_rect is the recursor automatically generated by Coq *)
Time Definition t_indDef := [indDef for t_rect].
Time Canonical t_indType := IndType t t_indDef.

Time Definition t_eqMixin := [derive eqMixin for t].
Time Canonical t_eqType := EqType t t_eqMixin.

End Medium.


Module Large.

Import Large.

(* t_rect is the recursor automatically generated by Coq *)
Time Definition t_indDef := [indDef for t_rect].
Time Canonical t_indType := IndType t t_indDef.

Time Definition t_eqMixin := [derive eqMixin for t].
Time Canonical t_eqType := EqType t t_eqMixin.

End Large.


Module VeryLarge.

Import VeryLarge.

(* t_rect is the recursor automatically generated by Coq *)
Time Definition t_indDef := [indDef for t_rect].
Time Canonical t_indType := IndType t t_indDef.

Time Definition t_eqMixin := [derive eqMixin for t].
Time Canonical t_eqType := EqType t t_eqMixin.

End VeryLarge.
